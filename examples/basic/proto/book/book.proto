syntax = "proto3";

option go_package = "github.com/ysugimoto/grpc-graphql-gateway/examples/basic/app/book";

package book;

import "author/author.proto";
import "graphql/graphql.proto";
import "google/protobuf/timestamp.proto";

enum BookType {
  JAVASCRIPT  = 0;
  ECMASCRIPT  = 1;
  GIT         = 2;
  ASP_DOT_NET = 3;
}

message Book {
  message Description {
    string value = 1;
  }
  int64 id = 1;
  string title = 2;
  BookType type = 3;
  some.app.v1.author.Author author = 4;
  Description description = 5;
}

message ListBooksRequest {}
message ListBooksResponse {
  repeated Book books = 1;
}

message GetBookRequest {
  // this is example comment for id field
  int64 id = 1 [(graphql.field) = {default: "10"}];
}

message CreateBookRequest {
  message NestedOne {
    int64 id = 1;
  }
  string title = 1;
  BookType type = 2;
  some.app.v1.author.Author author = 3;
  some.app.v1.author.AuthorType author_type = 4;
  NestedOne nested = 5;
  google.protobuf.Timestamp created_at = 6;
}

service BookService {
  option (graphql.service) = {
    host: "localhost:8080"
    insecure: true
  };

  rpc ListBooks(ListBooksRequest) returns (ListBooksResponse) {
    option (graphql.query) = {
      name: "books"
      response {
        repeated: true
        optional: true
        expose: "books"
      }
    };
  }
  rpc GetBook(GetBookRequest) returns (Book) {
    option (graphql.query) = {
      name: "book"
    };
  }

  rpc CreateBook(CreateBookRequest) returns (Book) {
    option (graphql.mutation) = {
      name: "createbook"
      request {
        name: "input"
      }
    };
  }
}

