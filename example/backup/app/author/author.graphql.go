// Code generated by proroc-gen-graphql, DO NOT EDIT.
package author

import (
	"encoding/json"

	"github.com/graphql-go/graphql"
)

var _ = json.Marshal
var _ = json.Unmarshal

// enum AuthorType in author/author.proto
func Gql__enum_AuthorType() *graphql.Enum {
	return graphql.NewEnum(graphql.EnumConfig{
		Name: "AuthorType",
		Values: graphql.EnumValueConfigMap{
			"NORMAL": &graphql.EnumValueConfig{
				Value: 0,
			},
			"SPECIAL": &graphql.EnumValueConfig{
				Value: 1,
			},
		},
	})
}

// message Author in author/author.proto
func Gql__type_Author() *graphql.Object {
	return graphql.NewObject(graphql.ObjectConfig{
		Name: "Author",
		Fields: graphql.Fields{
			"name": &graphql.Field{
				Type: graphql.String,
			},
		},
	})
}

// message ListAuthorsResponse in author/author.proto
func Gql__type_ListAuthorsResponse() *graphql.Object {
	return graphql.NewObject(graphql.ObjectConfig{
		Name: "ListAuthorsResponse",
		Fields: graphql.Fields{
			"authors": &graphql.Field{
				Type: graphql.NewList(Gql__type_Author()),
			},
		},
	})
}

// message GetAuthorRequest in author/author.proto
func Gql__type_GetAuthorRequest() *graphql.Object {
	return graphql.NewObject(graphql.ObjectConfig{
		Name: "GetAuthorRequest",
		Fields: graphql.Fields{
			"name": &graphql.Field{
				Type: graphql.String,
			},
		},
	})
}

// message ListAuthorsRequest in author/author.proto
func Gql__type_ListAuthorsRequest() *graphql.Object {
	return graphql.NewObject(graphql.ObjectConfig{
		Name:   "ListAuthorsRequest",
		Fields: graphql.Fields{},
	})
}
